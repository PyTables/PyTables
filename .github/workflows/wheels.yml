name: Wheels

# Publish when a (published) GitHub Release is created.
on:
  push:
    branches:
      - master
      - 'releases/**'
      - gha-macos-windows-ci
    tags:
      - v*
  release:
    types:
      - published

jobs:
  build_wheels:

    name: Build wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        #os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install cibuildwheel
        run: |
          pip install --upgrade cibuildwheel

      - name: Build wheels
        run: |
          cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp36-* cp37-* cp38-* cp39-*"
          CIBW_BEFORE_ALL_LINUX: "yum install -y epel-release && yum install -y blosc-devel bzip2-devel hdf5-devel lz4-devel lzo-devel snappy-devel zstd-devel zlib-devel"
          CIBW_BEFORE_BUILD: "pip install --requirement=requirements.txt cython>=0.29.21"
          CIBW_ENVIRONMENT: "DISABLE_AVX2='TRUE'"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install APT packages
        if: contains(${{ matrix.os }}, 'ubuntu')
        run: |
          sudo apt install libblosc-dev libbz2-dev libhdf5-dev liblz4-dev liblzo2-dev libsnappy-dev libzstd-dev zlib1g-dev
          sudo apt install latexmk texlive-fonts-recommended texlive-latex-recommended texlive-latex-extra texlive-plain-generic

      - name: Install dependencies
        run: |
          pip install --upgrade setuptools pip wheel
          pip install --requirement=requirements.txt cython>=0.29.21
          pip install --requirement=requirements-docs.txt

      - name: Build sdist
        run: make PYTHON=python dist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*

#  upload_pypi:
#    needs: [build_wheels, build_sdist]
#    runs-on: ubuntu-latest
#    # upload to PyPI on every tag starting with 'v'
#    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
#    # alternatively, to publish when a GitHub Release is created, use the following rule:
#    # if: github.event_name == 'release' && github.event.action == 'published'
#    steps:
#      - uses: actions/download-artifact@v2
#        with:
#          name: artifact
#          path: dist
#
#      - uses: pypa/gh-action-pypi-publish@master
#        with:
#          user: __token__
#          password: ${{ secrets.pypi_password }}
#          # To test: repository_url: https://test.pypi.org/legacy/
