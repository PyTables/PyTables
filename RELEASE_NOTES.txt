=======================================
 Release notes for PyTables 2.4 series
=======================================

:Author: PyTables maintainers
:Contact: pytables@googlemail.com

.. py:currentmodule:: tables


Changes from 2.4 to X.Y.Z (in development)
==========================================

New features
------------

- Since this release PyTables provides full support to Python_ 3
  (closes :issue`188`).

- The entire code base is now more compliant with coding style guidelines
  describe in the PEP8_ (closes :issue:`103` and :issue:`224`).
  See `API changes`_ for more details.

- Basic support for HDF5 drivers.  Now it is possible to open/create an
  HDF5 file using one of the SEC2, DIRECT, LOG, WINDOWS, STDIO or CORE
  drivers and also set the main parameters (closes :issue:`166`).
  Thanks to Michal Slonina.

- Basic support for in-memory image files.  An HDF5 file can be set from or
  copied into a memory buffer (thanks to Michal Slonina).  This feature is
  only available if PyTables is built against HDF5 1.8.9 or newer.
  Closes :issue:`165` and :issue:`173`.

- New :meth:`File.get_filesize` method for retrieving the HDF5 file size.

- Implemented methods to get/set the user block size in a HDF5 file
  (closes :issue:`123`)

- Improved support for PyInstaller_.  Now it is easier to pack frozen
  applications that use the PyTables package (closes: :issue:`177`).
  Thanks to Stuart Mentzer and Christoph Gohlke.

- All read methods now have an optional *out* argument that allows to pass a
  pre-allocated array to store data (:issue:`192`)

- Added support for the floating point data types with extended precision
  (Float96, Float128, Complex192 and Complex256).  It is only available if
  numpy_ provides it as well.
  Closes :issue:`51` and :issue:`214`.  Many thanks to Andrea Bedini.


Improvements
------------

- Improved runtime checks on dynamic loading of libraries: meaningful error
  messages are generated in case of failure.
  Also, now PyTables no more alters the system PATH.
  Closes :issue:`178` and :issue:`179` (thanks to Christoph Gohlke).

- Improved list of search paths for libraries as suggested by Nicholaus
  Halecky (see :issue:`219`).

- Removed deprecated Cython_ include (.pxi) files. Contents of
  :file:`convtypetables.pxi` have been moved in :file:`utilsextension.pyx`.
  Closes :issue:`217`.

- The internal Blosc_ library has been upgraded to version 1.1.5.

- Pre-load the bzip2_ library on windows (closes :issue:`205`)

- The :meth:`File.get_node` method now accepts unicode paths
  (closes :issue:`203`)

- Improved compatibility with Cython_ 0.19 (see :issue:`220` and
  :issue:`221`)

- Improved compatibility with numexpr_ 2.1

- Improved compatibility with development versions of numpy_
  (see :issue:`193`)

- Packaging: since this release the standard tar-ball package no more includes
  the PDF version of the "PyTables User Guide", so it is a little bit smaller
  now.  The complete and pre-build version of the documentation both in HTML
  and PDF format is available on the file `download area`_ on SourceForge.net.
  Closes: :issue:`172`.

- Now PyTables also uses `Travis-CI`_ as continuous integration service.
  All branches and all pull requests are automatically tested with different
  Python_ versions.  Closes :issue:`212`.


Other changes
-------------

- PyTables now requires Python 2.6 or newer.


Deprecations
------------

- The use of upper-case keyword arguments in the :func:`open_file` function
  and the :class:`File` class initializer is now deprecated.  All parameters
  defined in the :file:`tables/parameters.py` module can still be passed as
  keyword argument to the :func:`open_file` function just using a lower-case
  version of the parameter name.


API changes
-----------

The entire PyTables API as been made more PEP8_ compliant (see :issue:`224`).

The old API is till usable XXX

Many deprecated features and support for obsolete modules has been dropped:

- The deprecated :data:`is_pro` module constant has been removed

- The nra module and support for the obsolete numarray module has been removed.
  The *numarray* flavor is no more supported as well (closes :issue:`107`).

- Support for the obsolete Numeric module has been removed.
  The *numeric* flavor is no more available (closes :issue:`108`).

- The tables.netcdf3 module has been removed (closes :issue:`68`).

- The deprecated :exc:`exceptions.Incompat16Warning` exception has been
  removed

- The `__version__` module constants has been removed from almost all the
  modules (it was no more used after the switch to Git).
  Of course the package level constant (:data:`tables.__version__`) still
  remains.  Closes :issue:`112`.

- The :func:`lrange` has been dropped in favour of xrange (:issue:`181`)

- The :data:`parameters.MAX_THREADS` configuration parameter has been dropped
  in favour of :data:`parameters.MAX_BLOSC_THREADS` and
  :data:`parameters.MAX_NUMEXPR_THREADS` (closes :issue:`147`).

- The :meth:`File.create_external_link` method no more has a keyword
  parameter named *warn16incompat*.  It was deprecated since PyTables 2.4.



Other possibly incompatible changes
-----------------------------------

- Unicode attributes are no more stored in the HDF5 file as pickled string.
  They are now saved on the HDF5 file as UTF-8 encoded strings.

  Although this do not introduces no API breakage, files produced are different
  (for what concerns unicode attributes) from the ones produced by earlier
  versions of PyTables.

- System attributes are now stored in the HDF5 file using the character set
  that reflects the native string behaviour: ASCII for Python 2 and UTF8 for
  Python 3.  I any case system attributes are represented as Python string.


Bugs fixed
----------

- Better check access on closed files (closes :issue:`62`)

- Fix for :meth:`File.renameNode` where in certain cases
  :meth:`File._g_updateLocation` was wrongly called (closes :issue:`208`).
  Thanks to Michka Popoff.

- Fixed ptdump failure on data with nested columns (closes :issue:`213`).
  Thanks to Alexander Ford.

- Fixed an error in :func:`open_file` when filename is a :class:`numpy.str_`
  (closes :issue:`204`)

- Fixed :issue:`119`, where an index on Time64Col (only, Time32Col was ok)
  hides the data on selection from a Tables

.. _Python: http://www.python.org
.. _PEP8: http://www.python.org/dev/peps/pep-0008
.. _PyInstaller: http://www.pyinstaller.org
.. _Blosc: https://github.com/FrancescAlted/blosc
.. _bzip2: http://www.bzip.org
.. _Cython: http://www.cython.org
.. _Numexpr: http://code.google.com/p/numexpr
.. _numpy: http://www.numpy.org
.. _`download area`: http://sourceforge.net/projects/pytables/files/pytables
.. _`Travis-CI`: https://travis-ci.org


Changes from 2.3.1 to 2.4
=========================

New features
------------

- Improved HDF5 error logging management:

  * added a new function, :func:`silenceHDF5Messages`, for suppressing
    (and re-enabling) HDF5 messages.  By default HDF5 error logging is now
    suppressed. Closes :issue:`87`.
  * now all HDF5 error messages and trace-backs are trapped and attached to
    the :exc:`exceptions.HDF5ExtError` exception instances.
    Closes :issue:`120`.

- Added support for the float16 data type.  It is only available if numpy_
  provides it as well (i.e. numpy_ >= 1.6).  See :issue:`51`.

- Leaf nodes now have attributes for retrieving the size of data in memory
  and on disk.  Data on disk can be compressed, so the new attributes make it
  easy to compute the data compression ration.
  Thanks to Josh Ayers (close :issue:`141`).

- The maximum number of threads for Blosc_ and Numexpr_ is now handled using
  the :data:`parameters.MAX_BLOSC_THREADS` and
  :data:`parameters.MAX_NUMEXPR_THREADS` parameters respectively.
  This allows a more fine grained configuration capability.
  Closes :issue:`142`.

- `ndim` (read-only) attribute added to :class:`Leaf`, :class:`Atom` and
  :class:`Col` objects (closes :issue:`126`).

- Added read support for variable length string attributes (non scalar
  attributes are converted into numpy_ arrays with 'O8' type).
  See :issue:`54`.


Other improvements
------------------

- Dropped support for HDF5 1.6.x. Now PyTables uses the HDF5 1.8 API
  (closes :issue:`105`).

- Blosc_ updated to v. 1.1.3.

- The Blosc_ compression library is now automatically disabled on platforms
  that do not support unaligned memory access (see also
  https://github.com/FrancescAlted/blosc/issues/3 and
  http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=661286).

- Improved bzip2 detection on Windows (:issue:`116`).  Thanks to cgohlke.

- For Windows, the setup.py script now has the ability to automatically find
  the HDF5_DIR in the system PATH.  Thanks to Mark (mwiebe).

- Improved multi-arch support in GNU/Linux platforms (closes :issue:`124`)
  Thanks to Julian Taylor and Picca Frederic-Emmanuel.

- Use new style syntax for exception raising. Closes :issue:`93`.

- Fixed most of the warnings related to py3k compatibility (see :issue:`92`).

- Fixed pyflakes_ warnings (closes :issue:`102`).

- Cython_ extensions updated to use new constructs (closes :issue:`100`).

- Reduced the number of build warnings (closes :issue:`101`).

- Removed the old lrucache module. It is no more needed after the merge with
  PyTables Pro (closes :issue:`118`).

- Added explicit (import time) testing for hdf5dll.dll on Windows to improve
  diagnostics (closes :issue:`146`).  Thanks to Mark (mwiebe).


Documentation improvements
--------------------------

- new coockbook section (contents have been coming from the PyTables wiki
  on http://www.pytables.org)

- complete rework of the library reference.  Now the entire chapter is
  generated from docstrings using the sphinx autodoc extension.
  A big thank you to Josh Ayers.  Closes :issue:`148`.

- new sphinx theme based on the cloud template


Bugs fixed
----------

- Fixed a segfault on platforms that do not support unaligned memory access
  (closes: :issue:`134`).  Thanks to Julian Taylor.

- Fixed broken inheritance in :class:`IsDescription` classes (thanks to
  Andrea Bedini).  Closes :issue:`65`.

- Fixed table descriptions copy method (closes :issue:`131`).

- Fixed open failures handling (closes :issue:`158`).
  Errors that happen when one tries to open an invalid HDF5 file (e.g. an
  empty file) are now detected earlier by PyTables and a proper exception
  (:exc:`exceptions.HDF5ExtError`) is raised.
  Also, in case of open failures, invalid file descriptors are no more cached.
  Before is fix it was not possible to completely close the bad file and reopen
  the same path, even if a valid file was created in the meanwhile.
  Thanks to Daniele for reporting and for the useful test code.

- Fixed support to rich structured  numpy.dtype in
  :func:`description.descr_from_dtype`.   Closes :issue:`160`.

- Fixed sorting of nested tables that caused AttributeError.
  Closes :issue:`156` and :issue:`157`.  Thanks to Uwe Mayer.

- Fixed flavor deregistration (closes :issue:`163`)


Deprecations
------------

- The :data:`parameters.MAX_THREADS` configuration parameter is now
  deprecated.  Please use :data:`parameters.MAX_BLOSC_THREADS` and
  :data:`parameters.MAX_NUMEXPR_THREADS` instead.
  See :issue:`142`.

- Since the support for HDF5 1.6.x has been dropped, the *warn16incompat*
  argument of the :meth:`File.createExternalLink` method and the
  :exc:`exceptions.Incompat16Warning` exception class are now deprecated.

.. _pyflakes: https://launchpad.net/pyflakes


  **Enjoy data!**

  -- The PyTables Team


.. Local Variables:
.. mode: rst
.. coding: utf-8
.. fill-column: 72
.. End:
